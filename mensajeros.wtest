import mensajeros.*

describe "Test de mensajeros primera parte " {
	
	test "Morfeo en camion con 1 acoplado pesa 90kg + 500kg "{
		camion.cantAcoplados(1)
		camion.peso()
		morfeo.transporte(camion)
	    assert.equals(590, morfeo.peso())
}

	test "Camion con 2 acoplados pesan 1000kg + 90kg"{
		camion.cantAcoplados(2)
		camion.peso()
		morfeo.transporte(camion)
	    assert.equals(1090, morfeo.peso()) 
}

	test "monopatin pesa 1kg + "{
        morfeo.transporte(monopatin)
	    assert.equals(1, monopatin.peso())
}

	test "Morfeo en monopatin pesa 90kg + 1kg "{
		morfeo.transporte(monopatin)
	    assert.equals(91, morfeo.peso() )
}

	test "Morfeo anda en el Nabucodonosor"{
		morfeo.transporte(camion)
	    assert.equals(morfeo.transporte(), camion)
}

	test "el puente deja pasar un mensajero liviano"{
	    assert.that(puente.dejarPasar(morfeo))
    }

    test "el puente no deja pasar un mensajero pesado"{
        camion.cantAcoplados(3)
		camion.peso()
		morfeo.transporte(camion)
	    assert.notThat(puente.dejarPasar(morfeo))
    }

    test "un paquete estaPago"{
		paquete.pagar()
	    assert.that(paquete.estaPago())
    }

    test "un paquete pago con destino a Alsina puede ser entregado por Morfeo en camion liviano"{
		camion.cantAcoplados(1)
		morfeo.transporte(camion)
		paquete.pagar()
		paquete.destino(puente)
	    assert.that(paquete.puedeSerEntregadoPor(morfeo))
    }

    test "un paquete no pago no puede ser entregado por Morfeo"{
	    assert.notThat(paquete.puedeSerEntregadoPor(morfeo))
    }

	test "un paquete pago no puede entregado por Morfeo en camion de 3 acoplados"{
		paquete.pagar()
        camion.cantAcoplados(3)
	    assert.notThat(paquete.puedeSerEntregadoPor(morfeo))
    }

	test "Neo con credito no puede llevar paquete que no esta pago a la Matrix"{
		neo.cargarCredito(200)
		paquete.destino(matrix)
		paquete.puedeSerEntregadoPor(neo)
		assert.notThat(paquete.puedeSerEntregadoPor(neo))
	}

	test "Morfeo puede llevar un paquete que esta pago"{
		camion.cantAcoplados(1)
		morfeo.transporte(camion)
		paquete.pagar()
		paquete.destino(puente)
		assert.that(paquete.puedeSerEntregadoPor(morfeo))
	}

	test "paquetito puede ser entregado"{
		assert.that(paquetito.puedeSerEntregadoPor(trinity))
	}

	test "paqueton puede ser entregado"{
		paquetonViajero.pagar(200)
		assert.that(paquetonViajero.puedeSerEntregadoPor(trinity))
	}

	test "paqueton no puede ser entregado por trinity por falta de pago"{
		paquetonViajero.pagar(5)
		assert.notThat(paquetonViajero.puedeSerEntregadoPor(trinity))
	}

	test "paqueton no puede ser entregado porque morfeo no puede pasar por matrix"{
		paquetonViajero.pagar(200)
		assert.notThat(paquetonViajero.puedeSerEntregadoPor(morfeo))
	}
}





